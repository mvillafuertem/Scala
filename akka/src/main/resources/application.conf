akka {
  loglevel = "DEBUG"
}

dedicated-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 5
  }
}

postgres {
  akka.persistence.journal.plugin = "jdbc-journal"
  akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"

  akka-persistence-jdbc {
    shared-databases {
      slick {
        profile = "slick.jdbc.PostgresProfile$"
        db {
          numThreads = 10
          driver ="org.postgresql.Driver"
          url = "jdbc:postgresql://0.0.0.0:5432/akka"
          user = "admin"
          password = "admin"
        }
      }
    }
  }

  jdbc-journal {
    use-shared-db = "slick"
  }

  jdbc-snapshot-store {
    use-shared-db = "slick"
  }
}

cassandra {

  akka.persistence.journal.plugin = "cassandra-journal"
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

}

customSerializerDemo {

  akka.persistence.journal.plugin = "cassandra-journal"
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

  akka.actor {
    serializers {
      java = "akka.serialization.JavaSerializer"
      myakka = "io.github.mvillafuertem.akka.untyped.persistence.stores.MyAkkaSerializer"
    }

    serialization-bindings {
      "io.github.mvillafuertem.akka.untyped.persistence.stores.MyAkka" = myakka
    }
  }

}

detachingModels {

  akka.persistence.journal.plugin = "cassandra-journal"
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

  cassandra-journal {
    event-adapters {
      detach-adapter = "io.github.mvillafuertem.akka.untyped.persistence.practices.ModelAdapter"
    }
  }

  event-adapter-bindings {
    "io.github.mvillafuertem.akka.untyped.persistence.practices.DomainModel$CouponApplied" = detach-adapter
    "io.github.mvillafuertem.akka.untyped.persistence.practices.DataModel$WrittenCouponApplied" = detach-adapter

  }
}